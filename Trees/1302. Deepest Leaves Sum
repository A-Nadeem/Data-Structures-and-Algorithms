/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int mx = 0 ; 
    int s = 0 ; 
  
    void maxLvl( TreeNode* root, int level ) {
    if (!root ) return ; 

    mx = max(mx,level ) ; 

    maxLvl (root->left, level +1 ) ; 
    maxLvl (root->right, level +1 ) ; 
   
    }

    void sum(TreeNode* root, int level ) {
        if (!root ) return ;

        if ( level == mx ) s += root->val ; 

        sum (root->left, level + 1 ) ; 
        sum (root->right, level + 1 ) ; 
    }

public:
    int deepestLeavesSum(TreeNode* root) {
        
        maxLvl ( root, 0 ) ; 
        sum (root, 0 ) ; 

        return s ; 
    }
};
