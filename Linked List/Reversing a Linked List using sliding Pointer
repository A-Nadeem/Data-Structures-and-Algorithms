#include <iostream>
using namespace std;

class Node  {
    public :
    int data ;
    Node* next ; 
    
    Node(int data ) {
        this-> data = data ; 
        this->next = NULL ; 
    }
    
    ~Node() {
        cout<< "memory Freed" << endl ; 
    }
    
} ;

void display(Node* head ) {
        if (head == NULL) {
            cout<<endl ; 
            return ;
        }
        cout << head->data << " " ; 
        display(head->next) ; 
    } 

void insert (int a[], int n , Node* &head, Node* &tail ) {
        Node*  first = new Node(a[0]) ; 
        head = first ;
        tail = first ; 
    
    for (int i = 1 ; i < n  ; i++ ) {
            Node* n = new Node(a[i]) ; 
            tail->next = n ;
            tail = n ;
            
    }
}  

void reverse(Node* &head ) {
    Node* prev =   NULL ;
    Node* curr = NULL  ; 
    Node* nex = head ; 
    
    while (nex ) {
        prev = curr ;
        curr = nex ; 
        nex = nex->next ;
        
        curr->next = prev ; 
    }
    head = curr ; 
}


void rreverse( Node* &head , Node* prev ) {
if (head == NULL ) head = prev ;

rreverse(head->next, head ) ; 
 
prev->next = head ; 

    

}


    
int main() {
 
    int a[10] = {0,1,1,3,4,4,4,4,4,5} ;
    Node* head = NULL ;
    Node* tail = NULL ;
    
    insert(a,10,head,tail) ;
     display(head) ; 
    
    rreverse(head, NULL) ; 
    display(head) ; 
    return 0;
}    
