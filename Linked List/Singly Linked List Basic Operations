#include <iostream>
using namespace std;

class Node  {
    public :
    int data ;
    Node* next ; 
    
    Node(int data ) {
        this-> data = data ; 
        this->next = NULL ; 
    }
    
    ~Node() {
        cout<< "memory Freed" << endl ; 
    }
    
} ;

void insertAtHead (Node* &head, int data ) {
    
    // create a new node 
    
    Node* temp = new Node(data) ;
    
    // next = head 
        
    temp->next = head ; 
    
    // head = temp 
    
    head = temp ; 
    
}
void insertAtTail(Node* &tail, int data ) {
    // new node 
    Node* temp = new Node(data) ; 
 
    // tail ka next = temp 
 
    tail->next = temp ; 
 
    // tail = temp 
 
    tail = temp ; 
}

void insertAtMiddle( Node* &head, int n, int data ) {
    // create a node 
    Node* newNode = new Node(data) ;
   
    if ( n==1 )   {
        newNode->next= head ;
        head = newNode ; 
        return ; 
    }
    
    Node* temp = head ; 
  
    for (int i = 1 ; i < n-1 ; i++) {
        temp = temp->next ; 
    }
   
   // temp is at one pos before where we want to insert our node 
   
    newNode->next = temp->next ; 
    
    temp->next = newNode ; 
    
    
}

void print ( Node* &head) {
    Node* temp = head ; 
    
    while (temp != NULL) {
     cout << temp->data << " "; 
      temp = temp->next ; 
      }
    cout << endl ; 
}


void delByPos(Node* &head, int n ) {
    Node* prev = head; 
    Node* del = head ; 
    
    if (n==1) {
        Node* temp = head ; 
        head = head->next ; 
        temp->next = NULL ; 
        delete temp ;
        return ; 
    }
    
    
    
 
    for(int i = 1 ; i < n-1 ; i++) {
        prev = prev->next ; 
    }
    del = prev->next ; 
    
    prev->next = del->next ; 
    del->next = NULL ;
    delete del ; 
}





int main()
{
 
 Node* node1 = new Node(5) ; 
 Node* head = node1 ; 
 Node* tail = node1 ;   
 
 insertAtHead(head, 10 ) ;
 insertAtHead(head, 50) ; 
 
 insertAtTail(tail,10) ;
 insertAtTail(tail,50) ;
 insertAtMiddle(head, 6 , 7 ) ; 
 insertAtMiddle(head,7,8) ;
 insertAtMiddle(head,6,6) ; 
 
 
 print (head) ;
 
 delByPos(head, 8 ) ; 
 
 
 print (head) ;
    
}
