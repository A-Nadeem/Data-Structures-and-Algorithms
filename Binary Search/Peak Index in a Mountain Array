class Solution {
public:
    int peakIndexInMountainArray(vector<int>& arr) {
           
        int s = 0 ;
        int e = arr.size() -1 ;
        
        while ( s < e) {
            int mid = s + (e-s)/2 ; 
            
          //  if ( arr[mid]> arr[mid+1] && arr[mid] > arr[mid - 1 ]) return mid ;
            
            if ( arr[mid] < arr[mid +1]) s = mid + 1  ;
            else e = mid  ;
        }
        
        return e ; 
    }
};
class Solution {
public:
    int peakIndexInMountainArray(vector<int>& arr) {
        
       int s = 0 ;
        int e = arr.size() - 1 ;
        int ans ;
        
        while(s<e) {
            int m = s + (e-s)/2 ;
            
            if (arr[m] > arr[m+1]) {
                ans = m ;
                e = m;
            }
            
            if(arr[m] < arr[m+1]) {
                ans = m +1 ;
                s = m +1 ; 
            }
                       
        }
        
        return ans; 
      
    }
};
